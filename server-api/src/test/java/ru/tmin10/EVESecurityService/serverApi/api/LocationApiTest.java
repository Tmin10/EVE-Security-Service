/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.4.9.dev1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.tmin10.EVESecurityService.serverApi.api;

import ru.tmin10.EVESecurityService.serverApi.invoker.ApiException;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdLocationForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdLocationInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdLocationOk;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdOnlineForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdOnlineInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdShipForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdShipInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdShipOk;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationApi
 */
@Ignore
public class LocationApiTest {

    private final LocationApi api = new LocationApi();

    
    /**
     * Get character location
     *
     * Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable.  ---  Alternate route: &#x60;/v1/characters/{character_id}/location/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/location/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/location/&#x60;   ---  This route is cached for up to 5 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdLocationTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCharactersCharacterIdLocationOk response = api.getCharactersCharacterIdLocation(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get character online
     *
     * Checks if the character is currently online  ---  Alternate route: &#x60;/v1/characters/{character_id}/online/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/online/&#x60;   ---  This route is cached for up to 60 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdOnlineTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        Boolean response = api.getCharactersCharacterIdOnline(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get current ship
     *
     * Get the current ship type, name and id  ---  Alternate route: &#x60;/v1/characters/{character_id}/ship/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/ship/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/ship/&#x60;   ---  This route is cached for up to 5 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdShipTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCharactersCharacterIdShipOk response = api.getCharactersCharacterIdShip(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
}

/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.4.9.dev1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.tmin10.EVESecurityService.serverApi.api;

import ru.tmin10.EVESecurityService.serverApi.invoker.ApiException;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdCalendar200Ok;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdCalendarEventIdForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdCalendarEventIdInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdCalendarEventIdOk;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdCalendarForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCharactersCharacterIdCalendarInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.PutCharactersCharacterIdCalendarEventIdForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.PutCharactersCharacterIdCalendarEventIdInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.PutCharactersCharacterIdCalendarEventIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CalendarApi
 */
@Ignore
public class CalendarApiTest {

    private final CalendarApi api = new CalendarApi();

    
    /**
     * List calendar event summaries
     *
     * Get 50 event summaries from the calendar. If no event ID is given, the resource will return the next 50 chronological event summaries from now. If an event ID is specified, it will return the next 50 chronological event summaries from after that event.   ---  Alternate route: &#x60;/v1/characters/{character_id}/calendar/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/calendar/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/calendar/&#x60;   ---  This route is cached for up to 5 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdCalendarTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        Integer fromEvent = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdCalendar200Ok> response = api.getCharactersCharacterIdCalendar(characterId, datasource, fromEvent, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get an event
     *
     * Get all the information for a specific event  ---  Alternate route: &#x60;/v3/characters/{character_id}/calendar/{event_id}/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/calendar/{event_id}/&#x60;   ---  This route is cached for up to 5 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdCalendarEventIdTest() throws ApiException {
        Integer characterId = null;
        Integer eventId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCharactersCharacterIdCalendarEventIdOk response = api.getCharactersCharacterIdCalendarEventId(characterId, eventId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Respond to an event
     *
     * Set your response status to an event  ---  Alternate route: &#x60;/v3/characters/{character_id}/calendar/{event_id}/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/calendar/{event_id}/&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putCharactersCharacterIdCalendarEventIdTest() throws ApiException {
        Integer characterId = null;
        Integer eventId = null;
        PutCharactersCharacterIdCalendarEventIdResponse response = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        api.putCharactersCharacterIdCalendarEventId(characterId, eventId, response, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
}

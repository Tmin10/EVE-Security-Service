/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.4.9.dev1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.tmin10.EVESecurityService.serverApi.api;

import ru.tmin10.EVESecurityService.serverApi.invoker.ApiException;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdAlliancehistory200Ok;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdAlliancehistoryInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdIconsInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdIconsNotFound;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdIconsOk;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdMembers200Ok;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdMembersForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdMembersInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdNotFound;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdOk;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdRoles200Ok;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdRolesForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdRolesInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdStructures200Ok;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdStructuresForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsCorporationIdStructuresInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsNames200Ok;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsNamesInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.GetCorporationsNpccorpsInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.PutCorporationsCorporationIdStructuresStructureIdForbidden;
import ru.tmin10.EVESecurityService.serverApi.model.PutCorporationsCorporationIdStructuresStructureIdInternalServerError;
import ru.tmin10.EVESecurityService.serverApi.model.PutCorporationsCorporationIdStructuresStructureIdNewSchedule;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CorporationApi
 */
@Ignore
public class CorporationApiTest {

    private final CorporationApi api = new CorporationApi();

    
    /**
     * Get corporation information
     *
     * Public information about a corporation  ---  Alternate route: &#x60;/v3/corporations/{corporation_id}/&#x60;  Alternate route: &#x60;/dev/corporations/{corporation_id}/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCorporationsCorporationIdOk response = api.getCorporationsCorporationId(corporationId, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get alliance history
     *
     * Get a list of all the alliances a corporation has been a member of  ---  Alternate route: &#x60;/v1/corporations/{corporation_id}/alliancehistory/&#x60;  Alternate route: &#x60;/legacy/corporations/{corporation_id}/alliancehistory/&#x60;  Alternate route: &#x60;/dev/corporations/{corporation_id}/alliancehistory/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdAlliancehistoryTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCorporationsCorporationIdAlliancehistory200Ok> response = api.getCorporationsCorporationIdAlliancehistory(corporationId, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get corporation icon
     *
     * Get the icon urls for a corporation  ---  Alternate route: &#x60;/v1/corporations/{corporation_id}/icons/&#x60;  Alternate route: &#x60;/legacy/corporations/{corporation_id}/icons/&#x60;  Alternate route: &#x60;/dev/corporations/{corporation_id}/icons/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdIconsTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCorporationsCorporationIdIconsOk response = api.getCorporationsCorporationIdIcons(corporationId, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get corporation members
     *
     * Read the current list of members if the calling character is a member.  ---  Alternate route: &#x60;/v2/corporations/{corporation_id}/members/&#x60;  Alternate route: &#x60;/legacy/corporations/{corporation_id}/members/&#x60;  Alternate route: &#x60;/dev/corporations/{corporation_id}/members/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdMembersTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCorporationsCorporationIdMembers200Ok> response = api.getCorporationsCorporationIdMembers(corporationId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get corporation member roles
     *
     * Return the roles of all members if the character has the personnel manager role or any grantable role.  ---  Alternate route: &#x60;/v1/corporations/{corporation_id}/roles/&#x60;  Alternate route: &#x60;/legacy/corporations/{corporation_id}/roles/&#x60;  Alternate route: &#x60;/dev/corporations/{corporation_id}/roles/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdRolesTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCorporationsCorporationIdRoles200Ok> response = api.getCorporationsCorporationIdRoles(corporationId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get corporation structures
     *
     * Get a list of corporation structures  ---  Alternate route: &#x60;/v1/corporations/{corporation_id}/structures/&#x60;  Alternate route: &#x60;/legacy/corporations/{corporation_id}/structures/&#x60;  Alternate route: &#x60;/dev/corporations/{corporation_id}/structures/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdStructuresTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String language = null;
        Integer page = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCorporationsCorporationIdStructures200Ok> response = api.getCorporationsCorporationIdStructures(corporationId, datasource, language, page, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get corporation names
     *
     * Resolve a set of corporation IDs to corporation names  ---  Alternate route: &#x60;/v1/corporations/names/&#x60;  Alternate route: &#x60;/legacy/corporations/names/&#x60;  Alternate route: &#x60;/dev/corporations/names/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsNamesTest() throws ApiException {
        List<Long> corporationIds = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCorporationsNames200Ok> response = api.getCorporationsNames(corporationIds, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get npc corporations
     *
     * Get a list of npc corporations  ---  Alternate route: &#x60;/v1/corporations/npccorps/&#x60;  Alternate route: &#x60;/legacy/corporations/npccorps/&#x60;  Alternate route: &#x60;/dev/corporations/npccorps/&#x60;   ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCorporationsNpccorpsTest() throws ApiException {
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<Integer> response = api.getCorporationsNpccorps(datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Update structure vulnerability schedule
     *
     * Update the vulnerability window schedule of a corporation structure  ---  Alternate route: &#x60;/v1/corporations/{corporation_id}/structures/{structure_id}/&#x60;  Alternate route: &#x60;/legacy/corporations/{corporation_id}/structures/{structure_id}/&#x60;  Alternate route: &#x60;/dev/corporations/{corporation_id}/structures/{structure_id}/&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putCorporationsCorporationIdStructuresStructureIdTest() throws ApiException {
        Integer corporationId = null;
        List<PutCorporationsCorporationIdStructuresStructureIdNewSchedule> newSchedule = null;
        Long structureId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        api.putCorporationsCorporationIdStructuresStructureId(corporationId, newSchedule, structureId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
}
